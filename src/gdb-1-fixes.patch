This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Wed, 18 May 2022 12:59:35 +0200
Subject: [PATCH 1/2] add missing prototype for strsignal

Borrowed from:
https://www.mail-archive.com/cygwin@cygwin.com/msg169420.html

https://sourceware.org/git/?p=binutils-gdb.git;a=blobdiff;f=sim/common/nrun.c;h=1ceb0837e2c21aa081043bf62cc3f53aae235bd5;hp=0caa82062a240fa3609d7b221463ec9e07bbb5a5;hb=fe3486178040db782f18d67a95a1e63bdf68eedf;hpb=2a83fd8f4806f8580d86057dc00bfdb5efcfa1f6

diff --git a/gdb/event-top.c b/gdb/event-top.c
index 1111111..2222222 100644
--- a/gdb/event-top.c
+++ b/gdb/event-top.c
@@ -73,6 +73,11 @@ static void async_sigtstp_handler (gdb_client_data);
 #endif
 static void async_sigterm_handler (gdb_client_data arg);
 
+#ifndef HAVE_STRSIGNAL
+/* While libiberty provides a fallback, it doesn't provide a prototype.  */
+extern "C" char *strsignal (int __signo);
+#endif
+
 /* Instead of invoking (and waiting for) readline to read the command
    line and pass it back for processing, we use readline's alternate
    interface, via callback functions, so that the event loop can react

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@linux-m68k.org>
Date: Sun, 20 Mar 2022 14:01:54 +0100
Subject: [PATCH 2/2] Add support for readline 8.2

In readline 8.2 the type of rl_completer_word_break_characters changed to
include const.

diff --git a/gdb/completer.c b/gdb/completer.c
index 1111111..2222222 100644
--- a/gdb/completer.c
+++ b/gdb/completer.c
@@ -36,7 +36,7 @@
    calling a hook instead so we eliminate the CLI dependency.  */
 #include "gdbcmd.h"
 
-/* Needed for rl_completer_word_break_characters() and for
+/* Needed for rl_completer_word_break_characters and for
    rl_filename_completion_function.  */
 #include "readline/readline.h"
 
@@ -2011,7 +2011,7 @@ gdb_completion_word_break_characters_throw ()
       rl_basic_quote_characters = NULL;
     }
 
-  return rl_completer_word_break_characters;
+  return (char *) rl_completer_word_break_characters;
 }
 
 char *
